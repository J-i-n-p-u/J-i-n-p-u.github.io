label = ~PLACEFP,
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>% addPolygons(
data = bh_boundary,
fillColor = 'orange',
fillOpacity = 0.5,
color = "white",
weight = 0.5,
label = 'Belle Haven',
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
# addCircleMarkers(
#   data = all_26_sensors,
#   fillColor = 'green',
#   fillOpacity = 1,
#   color = "black",
#   weight = 0.5,
#   radius = 5,
#   label = ~sensor_index
# )%>%
addLegend("topright",
colors = c("red",  "yellow", "blue", "orange"),
labels = c("Redwood City", "East Palo Alto", "North Fair Oaks", "Belle Haven"),
opacity = 0.5)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = rwc_boundary,
fillColor = 'red',
fillOpacity = 0.5,
color = "white",
weight = 0.5,
label = ~PLACEFP,
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addPolygons(
data = epa_boundary,
fillColor = 'yellow',
fillOpacity = 0.5,
color = "white",
weight = 0.5,
label = ~PLACEFP,
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addPolygons(
data = nfo_boundary,
fillColor = 'blue',
fillOpacity = 0.5,
color = "white",
weight = 0.5,
label = ~PLACEFP,
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>% addPolygons(
data = bh_boundary,
fillColor = 'orange',
fillOpacity = 0.5,
color = "white",
weight = 0.5,
label = 'Belle Haven',
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
# addCircleMarkers(
#   data = all_26_sensors,
#   fillColor = 'green',
#   fillOpacity = 1,
#   color = "black",
#   weight = 0.5,
#   radius = 5,
#   label = ~sensor_index
# )%>%
addLegend("topright",
colors = c("red",  "yellow", "blue", "orange", "white"),
labels = c("Redwood City", "East Palo Alto", "North Fair Oaks", "Belle Haven", ""),
opacity = 0.5)
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = rwc_boundary,
fillColor = 'red',
fillOpacity = 0.5,
color = "white",
weight = 0.5,
label = ~PLACEFP,
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addPolygons(
data = epa_boundary,
fillColor = 'yellow',
fillOpacity = 0.5,
color = "white",
weight = 0.5,
label = ~PLACEFP,
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addPolygons(
data = nfo_boundary,
fillColor = 'blue',
fillOpacity = 0.5,
color = "white",
weight = 0.5,
label = ~PLACEFP,
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>% addPolygons(
data = bh_boundary,
fillColor = 'orange',
fillOpacity = 0.5,
color = "white",
weight = 0.5,
label = 'Belle Haven',
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addCircleMarkers(
data = all_26_sensors,
fillColor = 'green',
fillOpacity = 1,
color = "black",
weight = 0.5,
radius = 5,
label = ~sensor_index
)%>%
addLegend("topright",
colors = c("red",  "yellow", "blue", "orange", "white"),
labels = c("Redwood City", "East Palo Alto", "North Fair Oaks", "Belle Haven", ""),
opacity = 0.5)
source("airtable.R")
View(all_26_sensors)
View(all_26_sensors)
library(mapview)
mapview(all_26_sensors)
write.csv(all_26_sensors, 'all_26_sensors.csv')
a <-readRDS('G:\Shared drives\S22 218Z\Air Quality (OCOB)\Data\Sensors\all_27_sensors.rds')
a <-readRDS('G:\\Shared drives\\S22 218Z\\Air Quality (OCOB)\\Data\\Sensors\\all_27_sensors.rds')
View(a)
View(a)
b <-read.csv('G:\\Shared drives\\S22 218Z\\Air Quality (OCOB)\\Data\\Sensors\\participants.csv')
View(b)
View(a)
View(b)
library(dplyr)
library(purrr)
library(readr)
library(tidyr)
library(ggplot2)
library(sf)
library(jsonlite)
library(httr)
library(googledrive)
library(htmltools)
c <- a %>% left_join(b)
View(a)
c <- a %>% left_join(b, by = c("sensor_index"="id"))
View(c)
c1 <- unique(c)
View(c1)
write.csv(c1, 'G:\Shared drives\Our Communities, Our Bay\Data\PurpleAir\pilot_26_sensors.csv')
write.csv(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv')
class(c1$access)
write.csv.raw(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv')
write.table(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv')
install.packages('iotools')
library(iotools)
write.csv.raw(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv')
write.csv.raw(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv')
write.csv(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv' ,fileEncoding = "UTF-8")
write.csv(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv' ,fileEncoding = "UTF-8")
write.csv(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv' ,fileEncoding = "UTF-8" ,quote=FALSE)
write.csv(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv' ,fileEncoding = "UTF-8" ,quote=TRUE)
write.csv(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv' ,int_use_scientific=FALSE)
write_csv(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv' ,int_use_scientific=FALSE)
write_csv(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv' )
write_csv(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv' ,scientific=FALSE )
writeã€‚csv(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv' ,scientific=FALSE )
write.csv(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.csv' ,scientific=FALSE )
saveRDS(c1, 'G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.rds' )
aa <- readRDS('G:\\Shared drives\\Our Communities, Our Bay\\Data\\PurpleAir\\pilot_26_sensors.rds')
View(aa)
1
1/0
1+'s'
tryCatch(
a = 1+'a',
error = function(e)
)
print(x)
x = 1
print(x)
x = 1
tryCatch(
a = 1+'a',
error = function(e){x = 2}
)
print(x)
source("C:/Users/JPCli/Desktop/F22 OCOB Project/test.R", echo=TRUE)
source("C:/Users/JPCli/Desktop/F22 OCOB Project/test.R", echo=TRUE)
x = 1
tryCatch(
a = 1+'a',
error = function(e){x = 2}
)
print(x)
x = 1
tryCatch(
a = 1+'a',
error = function(e){x = 2}
)
x = 1
tryCatch(
1,
error = function(e){x = 2}
)
x
tryCatch(
1+'s',
error = function(e){x = 2}
)
x
1+'s'
x = 1
tryCatch(
x = 1+'s',
error = function(e){x = 2}
)
print(x)
tryCatch(
x = 1+'s',
error = function(e){x = 2}
)
x = 1
tryCatch(
p = 's'
x = 1 +'s',
error = function(e){x = 2}
)
print(x)
x = 1
tryCatch(
{p = 's'
x = 1 +'s'},
error = function(e){x = 2}
)
print(x)
x
log(2)
log(-1)
message(log(-1))
log('s')
tryCatch(
log('s'),
error = function(e){x = 2}
)
x
x = 1
tryCatch(
log('s'),
error = function(e){print(x+1)}
)
print(x)
x = 1
tryCatch(
log('s'),
error = function(e){x<- x+1}
)
print(x)
x
try(log("a"),silent = TRUE)
try(log("a"),silent = False)
a = try(log("a"),silent = TRUE)
a
class(a)
a = try(log("a"),silent = TRUE)
a
a = try(log(1),silent = TRUE)
a
class(a)
a = try(a=log(1),silent = TRUE)
a = loh(1)
a = log(1)
try(a=log(1),silent = TRUE)
try( ,silent = TRUE)
a = try( ,silent = TRUE)
a
class(a)
a = try({a=log(1)} ,silent = TRUE)
a
a = try({a=-1} ,silent = TRUE)
a
a = try({a=-1, b=2} ,silent = TRUE)
is.error()
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
some_function_that_may_fail <- function(i) {
if( runif(1) < .5 ) stop()
return(i)
}
for(i in 1:10){
try({
r <- some_function_that_may_fail(i)
break #break/exit the for-loop
}, silent = FALSE)
}
some_function_that_may_fail <- function(i) {
if( runif(1) < .5 ) stop()
return(i)
}
some_function_that_may_fail <- function(i) {
if( runif(1) < .5 ) stop()
return(i)
}
for(i in 1:10){
try({
r <- some_function_that_may_fail(i)
break #break/exit the for-loop
}, silent = FALSE)
}
a <- try(log('s'))
some_function_that_may_fail <- function() {
if( runif(1) < .5 ) stop()
return(1)
}
r <- NULL
attempt <- 1
while( is.null(r) && attempt <= 3 ) {
attempt <- attempt + 1
try(
r <- some_function_that_may_fail()
)
}
some_function_that_may_fail <- function() {
if( runif(1) < .5 ) stop()
return(1)
}
r <- NULL
attempt <- 1
while( is.null(r) && attempt <= 3 ) {
attempt <- attempt + 1
try(
r <- some_function_that_may_fail()
)
}
some_function_that_may_fail <- function() {
if( runif(1) < .5 ) stop()
return(1)
}
r <- NULL
attempt <- 1
while( is.null(r) && attempt <= 3 ) {
attempt <- attempt + 1
try(
r <- some_function_that_may_fail(),
silent = T
)
}
some_function_that_may_fail <- function() {
if( runif(1) < .5 ) stop()
return(1)
}
r <- NULL
attempt <- 1
while( is.null(r) && attempt <= 3 ) {
attempt <- attempt + 1
try(
r <- some_function_that_may_fail(),
silent = T
)
}
clear
11111111111111111
some_function_that_may_fail <- function() {
if( runif(1) < .5 ) stop()
return(1)
}
r <- NULL
attempt <- 1
while( is.null(r) && attempt <= 3 ) {
attempt <- attempt + 1
try(
r <- some_function_that_may_fail(),
silent = T
)
}
r <- NULL
attempt <- 1
while( is.null(r) && attempt <= 3 ) {
attempt <- attempt + 1
try(
r <- some_function_that_may_fail(),
silent = T
)
}
Sys.Date()-224
library(dplyr)
library(purrr)
library(readr)
library(tidyr)
library(ggplot2)
library(sf)
library(jsonlite)
library(httr)
library(googledrive)
library(htmltools)
options(readr.show_progress=F)
drive_auth(path = "stanford-future-bay-dd820dd33c81.json")
0
library(dplyr)
library(purrr)
library(readr)
library(tidyr)
library(ggplot2)
library(sf)
library(jsonlite)
library(httr)
library(googledrive)
library(htmltools)
options(readr.show_progress=F)
drive_auth(path = "stanford-future-bay-dd820dd33c81.json")
library(dplyr)
library(purrr)
library(readr)
library(tidyr)
library(ggplot2)
library(sf)
library(jsonlite)
library(httr)
library(googledrive)
library(htmltools)
options(readr.show_progress=F)
drive_auth(path = "stanford-future-bay-dd820dd33c81.json")
library(dplyr)
library(purrr)
library(readr)
library(tidyr)
library(ggplot2)
library(sf)
library(jsonlite)
library(httr)
library(googledrive)
library(htmltools)
options(readr.show_progress=F)
drive_auth(path = "stanford-future-bay-dd820dd33c81.json")
0
library(dplyr)
library(purrr)
library(readr)
library(tidyr)
library(ggplot2)
library(sf)
library(jsonlite)
library(httr)
library(googledrive)
library(htmltools)
options(readr.show_progress=F)
drive_auth(path = "stanford-future-bay-dd820dd33c81.json")
1
library(dplyr)
library(purrr)
library(readr)
library(tidyr)
library(ggplot2)
library(sf)
library(jsonlite)
library(httr)
library(googledrive)
library(htmltools)
options(readr.show_progress=F)
drive_auth(path = "stanford-future-bay-dd820dd33c81.json")
0
library(dplyr)
library(purrr)
library(readr)
library(tidyr)
library(ggplot2)
library(sf)
library(jsonlite)
library(httr)
library(googledrive)
library(htmltools)
options(readr.show_progress=F)
drive_auth(path = "stanford-future-bay-dd820dd33c81.json")
setwd("H:/My Drive/GitHub/J-i-n-p-u.github.io")
